/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package drones;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class App {
    public static void main(String[] args) {
        List<Drone> drones = new ArrayList<>();
        List<Location> locations = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader("app//src////main//resources//Input.txt"))) {
            String line;

            // Read drone data
            line = reader.readLine();
            line = line.replaceAll("\\[", "").replaceAll("\\]", "");
            String[] droneData = line.split(", ");
            for (int i = 0; i < droneData.length; i += 2) {
                String droneName = droneData[i];
                int maxWeight = Integer.parseInt(droneData[i + 1]);
                drones.add(new Drone(droneName, maxWeight));
            }

            // Read location data
            while ((line = reader.readLine()) != null) {
                line = line.replaceAll("\\[", "").replaceAll("\\]", "");
                String[] locationData = line.split(", ");
                String locationName = locationData[0];
                int packageWeight = Integer.parseInt(locationData[1]);
                locations.add(new Location(locationName, packageWeight));
            }

        } catch (IOException e) {
            System.out.println("Error reading input file: " + e.getMessage());
            return;
        }

        // Drones and locations being sorted in a descending manner to optimize the
        // alghoritm and ensure the drones with most capacity will take the bigger
        // packages.
        Collections.sort(drones);
        Collections.sort(locations);

        List<DroneRoutePlanner> routes = new ArrayList<DroneRoutePlanner>();
        try {
            routes = DroneDeliveryManager.process(drones, locations);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return;
        }

        if (routes != null && routes.size() > 0) {
            // Display results
            for (DroneRoutePlanner route : routes) {
                System.out.println("[" + route.getDrone().getName() + "]");
                List<List<Location>> trips = route.getTrips();

                for (int i = 0; i < trips.size(); i++) {
                    System.out.println("Trip #" + (i + 1));
                    for (int k = 0; k < trips.get(i).size(); k++) {
                        System.out.println("[" + trips.get(i).get(k).getName() + "]");
                    }
                }
                System.out.println();
            }
        } else {
            System.out.println("No routes to be displayed.");
        }
    }
}
